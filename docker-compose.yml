services:
  admin.front:
    image: apbs.time.app.admin.front
    build: 
      context: ./Front/ultima-vue-6.3.0
      dockerfile: Dockerfile
      args:
        VITE_API_URL: "http://localhost:58198"
    ports:
      - "58170:80"
    restart: unless-stopped

  client.front:
    image: apbs.time.app.client.front
    build: 
      context: ./Front/time-tracking-frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: "http://localhost:58196"
    ports:
      - "58171:80"
    restart: unless-stopped


  apbs-time-app.client.auth:
    container_name: time.app.auth
    image: youssef_khe/apbs-time-app-client-auth
    build:
      context: ./Back
      dockerfile: apbs-time-app/Dockerfile
    depends_on:
        - sqlserver
        - apbs-time-app.client.timemanager
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - DefaultConnection=Server=sqlserver;Database=mtaDb;User=sa;Password=sa12345@;TrustServerCertificate=True;Authentication=SqlPassword;
    restart: unless-stopped
 
  apbs-time-app.client.timemanager:
    image: youssef_khe/apbs-time-app-client-time-manager
    build:
      context: ./Back
      dockerfile: Apbs-Time-App.Client.TimeManager/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    restart: unless-stopped

  apbs-time-app.client.gateway:
    container_name: time.app.gateway
    image: youssef_khe/apbs-time-app-client-gateway
    build:
      context: ./Back
      dockerfile: time-app-gateway/Dockerfile
    ports:
        - 58196:8080
        - 58197:8081
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    restart: unless-stopped
 
  apbs-time-app-admin:
    container_name: time-app-admin
    image: youssef_khe/apbs-time-app-admin
    build:
      context: ./Back
      dockerfile: apbs-time-app-admin/Dockerfile
    ports:
        - 58198:8080
        - 58199:8081
    depends_on:
        - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - DefaultConnection=Server=sqlserver;Database=TenantDB;User=sa;Password=sa12345@;TrustServerCertificate=True;Authentication=SqlPassword;
    restart: unless-stopped
  
  sqlserver:
      image: mcr.microsoft.com/mssql/server:2022-latest
      container_name: sqlserver
      environment:
        ACCEPT_EULA: "Y"
        MSSQL_SA_PASSWORD: "sa12345@"
      ports:
        - "9632:1433"
      volumes:
        - sqlserverdata:/var/opt/mssql
      restart: unless-stopped

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    restart: unless-stopped


volumes:
  sqlserverdata:
